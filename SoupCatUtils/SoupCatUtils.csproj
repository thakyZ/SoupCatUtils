<Project Sdk="Dalamud.NET.Sdk/11.0.0">
  <PropertyGroup>
    <Authors>Neko Boi Nick</Authors>
    <Description>
      Allows any number of mounts to be enabled for the mount roulette, instead of having to choose between the
      "up to 30" and "EVERYTHING" modes supported by the game. Also has (or will have) an option to omit the
      island sanctuary minions from being spawned.
    </Description>
    <PackageProjectUrl>https://github.com/thakyZ/SoupCatUtils</PackageProjectUrl>
    <Copyright></Copyright>
    <RootNamespace>NekoBoiNick.FFXIV.DalamudPlugin.SoupCatUtils</RootNamespace>
    <Title>Soup Cat Utils</Title>
    <NeutralLanguage>en-US</NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup Label="Target">
    <TargetFramework>net8.0-windows</TargetFramework>
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>$(PlatformTarget)</Platforms>
    <Configurations>Release;Debug</Configurations>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <Configurations>Debug;Release;ILRepackTest;PersonalRelease</Configurations>
  </PropertyGroup>

  <PropertyGroup Label="Build">
    <OutputType>Library</OutputType>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
    <ErrorReport>prompt</ErrorReport>
    <RestorePackagesWithLockFile>false</RestorePackagesWithLockFile>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Label="Feature">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Version>1.0.0.2</Version>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>

  <PropertyGroup>
    <Company>$(Authors)</Company>
    <AssemblyTitle>$(Title)</AssemblyTitle>
    <Product>$(Title)</Product>
    <PluginVersion>$(Version)</PluginVersion>
    <FileVersion>$(Version)</FileVersion>
    <AssemblyVersion>$(Version)</AssemblyVersion>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>TRACE</DefineConstants>
    <BuildDependsOn>PreBuild-MSBuildTasks;$(BuildDependsOn);AfterBuild</BuildDependsOn>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' OR '$(Configuration)' == 'ILRepackTest' OR '$(Configuration)' == 'PersonalRelease' ">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'ILRepackTest' OR '$(Configuration)' == 'PersonalRelease' ">
    <DefineConstants>$(DefineConstants);xDEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'PersonalRelease' ">
    <DefineConstants>$(DefineConstants);xPersonalRelease</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' OR '$(Configuration)' == 'Release' ">
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <BaseOutputPath>$(OutputPath)</BaseOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' OR '$(Configuration)' == 'Release' OR '$(Configuration)' == 'ILRepackTest' ">
    <OutputPath>$(SolutionDir)bin\$(Configuration)\</OutputPath>
    <BaseOutputPath>$(OutputPath)</BaseOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'ILRepackTest' OR '$(Configuration)' == 'PersonalRelease' ">
    <AssemblyName>$(MSBuildProjectName)2</AssemblyName>
    <BaseOutputPath>$(OutputPath)</BaseOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug' OR  '$(Configuration)' == 'ILRepackTest'">
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release' OR  '$(Configuration)' == 'PersonalRelease'">
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'PersonalRelease' ">
    <AssemblyName>$(MSBuildProjectName)2</AssemblyName>
    <OutputPath>$(DalamudDevPlugins)\$(MSBuildProjectName)\</OutputPath>
    <BaseOutputPath>$(OutputPath)</BaseOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'ILRepackTest' ">
    <BuildDependsOn>$(BuildDependsOn);PostBuild-ILRepack;</BuildDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(SolutionDir)lib\ECommons\ECommons\ECommons.csproj" />
    <!-- <ProjectReference Include="$(SolutionDir)lib\OtterGui\OtterGui.csproj" /> -->
  </ItemGroup>

  <ItemGroup>
    <!-- Hide the bin folder when configuration is set to "Debug" -->
    <None Remove="$(ProjectDir)bin\**" />
    <Compile Remove="$(ProjectDir)bin\**" />
    <None Remove="$(ProjectDir)bin\**" />
  </ItemGroup>

  <ItemGroup>
    <!-- Hide the bin folder when configuration is set to "Debug" -->
    <!-- Add git files to the IDE -->
    <Content Include="$(SolutionDir).gitignore" CopyToOutputDirectory="Never" />
    <Content Include="$(SolutionDir).gitattributes" CopyToOutputDirectory="Never" />
    <Content Include="$(SolutionDir).github\workflows\build.yml" Link="build.yml" CopyToOutputDirectory="Never" Condition="Exists('$(SolutionDir).github\workflows\build.yml')" />
    <Content Include="$(SolutionDir)README.md" CopyToOutputDirectory="Never" />
    <!-- Add the main .editorconfig file to the IDE -->
    <EditorConfigFiles Remove="$(SolutionDir).editorconfig" />
    <None Include="$(SolutionDir)lib\.editorconfig" Link=".editorconfig" />
    <EditorConfigFiles Remove="$(SolutionDir)lib\.editorconfig" />
    <None Include="$(SolutionDir)lib\.editorconfig" Link="lib\.editorconfig" />
    <None Include=".editorconfig" />
    <!-- Add the resources for later use (They are not used at this moment) -->
    <Folder Include="$(ProjectDir)Providers\" />
    <Folder Include="$(ProjectDir)Resources\" />
    <Compile Update="$(ProjectDir)Properties\Resources.Designer.cs" DesignTime="true" AutoGen="true" DependentUpon="Resources.resx" />
    <EmbeddedResource Update="$(ProjectDir)Properties\Resources.resx" Generator="ResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />
  </ItemGroup>

  <!-- Clean the output directory of all loose unneeded files -->
  <Target Name="CleanOutDir" AfterTargets="PackagePlugin">
    <ItemGroup>
      <DeleteLooseFiles Include="$(TargetDir)$(AssemblyName).deps.json" />
    </ItemGroup>
    <Message Text="Deleting Loose Files" Importance="high" Condition=" '$(DeleteLooseFiles.Length)' != '0' " />
    <Delete Files="@(DeleteLooseFiles)" Condition=" '$(DeleteLooseFiles.Length)' != '0' " />
    <Message Text="Deleting $(TargetDir)ref\" Importance="high" Condition="Exists('$(TargetDir)ref\')" />
    <RemoveDir Directories="$(TargetDir)ref\" Condition="Exists('$(TargetDir)ref\')" />
    <!-- Some libraries copy over a folder called "runtimes" that contain duplicates of binary files, so just remove anyways. -->
    <Message Text="Deleting $(TargetDir)runtimes\" Importance="high" Condition="Exists('$(TargetDir)ref\')" />
    <RemoveDir Directories="$(TargetDir)runtimes\" Condition="Exists('$(TargetDir)runtimes\')" />
  </Target>
</Project>