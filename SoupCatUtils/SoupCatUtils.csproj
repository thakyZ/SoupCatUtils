<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Company>Neko Boi Nick</Company>
    <Authors>Neko Boi Nick</Authors>
    <Description>
      Allows any number of mounts to be enabled for the mount roulette, instead of having to choose between the
      "up to 30" and "EVERYTHING" modes supported by the game. Also has (or will have) an option to omit the
      island sanctuary minions from being spawned.
    </Description>
    <PackageProjectUrl>https://github.com/thakyZ/BetterMinionRoulette-Dalamud</PackageProjectUrl>
    <Copyright></Copyright>
    <RootNamespace>NekoBoiNick.FFXIV.DalamudPlugin.SoupCatUtils</RootNamespace>
    <Title>Soup Cat Utils</Title>
    <NeutralLanguage>en-US</NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup Label="Target">
    <TargetFramework>net7.0-windows</TargetFramework>
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64</Platforms>
    <Configurations>Release;Debug</Configurations>
    <Nullable>Enable</Nullable>
    <LangVersion>Latest</LangVersion>
    <GenerateDependencyFile>False</GenerateDependencyFile>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
  </PropertyGroup>

  <PropertyGroup Label="Build">
    <OutputType>Library</OutputType>
    <AppendTargetFrameworkToOutputPath>False</AppendTargetFrameworkToOutputPath>
    <DebugSymbols>True</DebugSymbols>
    <DebugType>Full</DebugType>
    <ProduceReferenceAssembly>False</ProduceReferenceAssembly>
    <RestorePackagesWithLockFile>True</RestorePackagesWithLockFile>
    <CopyLocalLockFileAssemblies>True</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <PropertyGroup Label="Feature">
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <Version>1.0.0.0</Version>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>False</GeneratePackageOnBuild>
    <AutoGenerateBindingRedirects>True</AutoGenerateBindingRedirects>
    <DalamudLibPath>$(AppData)\XIVLauncher\addon\Hooks\dev\</DalamudLibPath>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyTitle>$(Title)</AssemblyTitle>
    <Product>$(Title)</Product>
    <PluginVersion>$(Version)</PluginVersion>
    <FileVersion>$(Version)</FileVersion>
    <AssemblyVersion>$(Version)</AssemblyVersion>
    <BuildDependsOn>
      PreBuild-MSBuildTasks;
      $(BuildDependsOn);
      AfterBuild
    </BuildDependsOn>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <AssemblyName>$(MSBuildProjectName)2</AssemblyName>
    <Optimize>False</Optimize>
    <OutputPath>$(AppData)\XIVLauncher\devPlugins\$(MSBuildProjectName)\</OutputPath>
    <BaseOutputPath>$(AppData)\XIVLauncher\devPlugins\$(MSBuildProjectName)\</BaseOutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>Full</DebugType>
    <ErrorReport>Prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <BuildDependsOn>
      $(BuildDependsOn);
      PostBuild-ILRepack
    </BuildDependsOn>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <DebugType>PDBOnly</DebugType>
    <Optimize>True</Optimize>
    <OutputPath>$(SolutionDir)bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>Prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <!-- These are used for the tasks in the target called "PackagePlugin" -->
    <PackageReference Include="DalamudPackager" Version="2.1.11" />
    <!-- These are used for the tasks in the target called "PostBuild-ILRepack" -->
    <PackageReference Include="ILRepack" Version="2.0.18" GeneratePathProperty="true" />
    <!-- These are used for the tasks in the target called "PreBuild-MSBuildTasks" -->
    <PackageReference Include="MSBuildTasks" Version="1.5.0.235" PrivateAssets="all" IncludeAssets="runtime;build;native;contentfiles;analyzers;buildtransitive" />
    <Reference Include="Dalamud">
      <HintPath>$(DalamudLibPath)\Dalamud.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="ImGui.NET">
      <HintPath>$(DalamudLibPath)\ImGui.NET.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Lumina">
      <HintPath>$(DalamudLibPath)\Lumina.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Lumina.Excel">
      <HintPath>$(DalamudLibPath)\Lumina.Excel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="ImGuiScene">
      <HintPath>$(DalamudLibPath)\ImGuiScene.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="FFXIVClientStructs">
      <HintPath>$(DalamudLibPath)\FFXIVClientStructs.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(DalamudLibPath)\Newtonsoft.Json.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>

  <!-- When the configuration is set to "Release" it will only read from the main plugin config file -->
  <ItemGroup Condition=" '$(Configuration)' == 'Release' ">
    <Content Include="$(MSBuildProjectName).yaml" CopyToOutputDirectory="Never" />
    <None Remove="$(MSBuildProjectName)2.yaml" />
  </ItemGroup>

  <!-- When the configuration is set to "Debug" it will only read from the development plugin config file -->
  <ItemGroup Condition=" '$(Configuration)' == 'Debug' ">
    <None Remove="$(MSBuildProjectName).yaml" />
    <Content Include="$(MSBuildProjectName)2.yaml" CopyToOutputDirectory="Never" />
  </ItemGroup>

  <ItemGroup>
    <!-- Hide the bin folder when configuration is set to "Debug" -->
    <Compile Remove="bin\**" />
    <None Remove="bin\**" />
    <!-- Add git files to the IDE -->
    <Content Include="$(SolutionDir)\.gitignore" CopyToOutputDirectory="Never" />
    <Content Include="$(SolutionDir)\.gitattributes" CopyToOutputDirectory="Never" />
    <!-- Add the main editor config to the IDE -->
    <EditorConfigFiles Remove=".editorconfig" />
    <None Include="$(SolutionDir)\.editorconfig" Link=".editorconfig" />
    <!-- Add the resources for later use (They are not used at this moment) -->
    <Folder Include="Resources\" />
    <Compile Update="Properties\Resources.Designer.cs" DesignTime="True" AutoGen="True" DependentUpon="Resources.resx" />
    <EmbeddedResource Update="Properties\Resources.resx" Generator="ResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />
  </ItemGroup>

  <!-- Add the personal, local, SonarLint editor config file to ignore common warnings -->
  <ItemGroup Condition="Exists('$(AppData)\MSRuleSets\sonarlint.editorconfig')">
    <None Include="$(AppData)\MSRuleSets\sonarlint.editorconfig" Link="sonarlint.editorconfig" />
    <EditorConfigFiles Remove="$(AppData)\MSRuleSets\sonarlint.editorconfig" />
  </ItemGroup>

  <!-- Add the personal, local, Roslynator editor config file to ignore common warnings -->
  <ItemGroup Condition="Exists('$(AppData)\MSRuleSets\roslynator.editorconfig')">
    <None Include="$(AppData)\MSRuleSets\roslynator.editorconfig" Link="roslynator.editorconfig" />
    <EditorConfigFiles Remove="$(AppData)\MSRuleSets\roslynator.editorconfig" />
  </ItemGroup>

  <!-- A prebuild task, will alter the code based on other config files upon building -->
  <Target Name="PreBuild-MSBuildTasks" BeforeTargets="Build">
    <Message Text="Project File: $(ProjectDir)SoupCatUtils.csproj" />
    <!-- Get the plugin author from this project file -->
    <XmlRead Prefix="n" Namespace="http://schemas.microsoft.com/developer/msbuild/2003" XPath="/n:Project/n:PropertyGroup/n:Authors/text()" XmlFileName="$(ProjectDir)SoupCatUtils.csproj">
      <Output TaskParameter="Value" PropertyName="PluginAuthor" />
    </XmlRead>
    <Message Text="Plugin Author: $(PluginAuthor)" />
    <!-- Get the plugin name from this project file -->
    <XmlRead Prefix="n" Namespace="http://schemas.microsoft.com/developer/msbuild/2003" XPath="/n:Project/n:PropertyGroup/n:Title/text()" XmlFileName="$(ProjectDir)SoupCatUtils.csproj">
      <Output TaskParameter="Value" PropertyName="PluginName" />
    </XmlRead>
    <Message Text="Plugin Name: $(PluginName)" />
    <!-- Start replacing the elements in the files -->
    <!--
      Element syntax should be in a string or a multiline comment field and shall be formatted as '$${<Variable Name>}$$'
      Examples:
      "$${TOKEN}$$"
      /*$${TOKEN}$$*/
    -->
    <Message Text="Build Targets: $(BuildTargets)" />
    <FileUpdate Files="$(ProjectDir)Plugin.cs" Regex="StaticAuthor = &quot;.*?&quot;;" ReplacementText="StaticAuthor = &quot;$(Authors)&quot;;" />
    <FileUpdate Files="$(ProjectDir)Plugin.cs" Regex="StaticName = &quot;.*?&quot;;" ReplacementText="StaticName = &quot;$(Title)&quot;;" />
  </Target>

  <!-- Run the Dalamud packager for the release configuration -->
  <Target Name="PackagePlugin" AfterTargets="Build" Condition=" '$(Configuration)' == 'Release' ">
    <DalamudPackager ProjectDir="$(ProjectDir)" OutputPath="$(OutputPath)" AssemblyName="$(AssemblyName)" MakeZip="true" />
  </Target>

  <!-- Run the Dalamud packager for the debug configuration -->
  <Target Name="PackagePlugin" AfterTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
    <DalamudPackager ProjectDir="$(ProjectDir)" OutputPath="$(OutputPath)" AssemblyName="$(AssemblyName)" MakeZip="false" />
  </Target>

  <!-- Clean the output directory of all loose unneeded files -->
  <Target Name="CleanOutDir" AfterTargets="PackagePlugin">
    <ItemGroup>
      <DeleteAssemblies Include="$(TargetDir)$(AssemblyName).deps.json" />
    </ItemGroup>
    <Message Text="Deleting @(DeleteAssemblies)" Importance="high" />
    <Delete Files="@(DeleteAssemblies)" />
    <RemoveDir Directories="$(TargetDir)\ref\" />
    <!-- Some libraries copy over a folder called "runtimes" that contain duplicates of binary files, so just remove anyways. -->
    <RemoveDir Directories="$(TargetDir)\runtimes\" />
  </Target>

  <!-- When building the plugin into 'XIVLauncher/devPlugins' having loose binaries throws errors in the console so package them into the main binary -->
  <!-- I don't believe the developers for Dalamud will fix those errors from showing up -->
  <Target Name="PostBuild-ILRepack" AfterTargets="CleanOutDir" Condition=" '$(Configuration)' == 'Debug' ">
    <ItemGroup>
      <InputAssemblies Include="$(TargetPath)" />
      <InputAssemblies Include="$(TargetDir)*.dll" Exclude="$(TargetPath)" />
    </ItemGroup>
    <Exec Command="$(PkgILRepack)\tools\ILRepack.exe /union /lib:$(DalamudLibPath) /out:$(TargetDir)$(TargetFileName) @(InputAssemblies, ' ')" />
    <ItemGroup>
      <CleanAssemblies Include="$(TargetDir)*.dll" Exclude="$(TargetDir)$(TargetFileName)" />
    </ItemGroup>
    <Delete Files="@(CleanAssemblies)" />
  </Target>
</Project>